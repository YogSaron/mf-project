<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.project.dao.SysOutOrderMapper">
  <resultMap id="BaseResultMap" type="com.company.project.model.SysOutOrder">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="delivery_date" jdbcType="TIMESTAMP" property="deliveryDate" />
    <result column="delivery_address" jdbcType="VARCHAR" property="deliveryAddress" />
    <result column="account_payable" jdbcType="DECIMAL" property="accountPayable" />
    <result column="account_paid" jdbcType="DECIMAL" property="accountPaid" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="order_date" jdbcType="TIMESTAMP" property="orderDate" />
    <result column="flag" jdbcType="SMALLINT" property="flag" />
  </resultMap>
  <select id="getPayable" resultType="DECIMAL">
    select SUM(case when flag=2 then total_amount*(-1) else total_amount end ) from sys_out_order
    <where>
      <if test="startDate != null">
       and `delivery_date` <![CDATA[ > ]]> #{startDate}
      </if>
      <if test="endDate != null">
        and `delivery_date` <![CDATA[ <= ]]> #{endDate}
      </if>
      <if test="customerId != null">
        and `customer_id` = #{customerId}
      </if>
    </where>
  </select>
  <select id="sumByMonth" resultType="map">
  SELECT t.mon,SUM(t.total_amount) FROM
  (SELECT MONTH(delivery_date) as mon,total_amount,Year(delivery_date) as targetYear
 from sys_out_order
    <where>
      <if test="customerId != null">
        customerId = #{customerId}
      </if>
    </where>
    ) as t
    where t.targetYear = #{targetYear}
    GROUP BY t.mon
  </select>
</mapper>